// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "alignContent": "center",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "flex-start",
      "top": 40,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "skyblue",
          "flexDirection": "row",
          "height": 50,
        }
      }
    >
      <Text
        allowFontScaling={false}
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 20,
            },
            Object {
              "fontSize": 20,
              "paddingLeft": 10,
              "paddingRight": 20,
            },
            Object {
              "fontFamily": "FontAwesome5Free-Solid",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {
              "fontWeight": "900",
            },
          ]
        }
      >
        
      </Text>
      <Text
        style={
          Object {
            "alignItems": "center",
            "fontSize": 20,
            "fontWeight": "bold",
            "justifyContent": "center",
            "paddingLeft": 10,
            "textAlign": "center",
          }
        }
      >
         Services
      </Text>
      <View
        style={
          Object {
            "borderColor": "red",
            "flexDirection": "row",
            "justifyContent": "flex-end",
            "marginRight": 40,
            "textAlign": "right",
          }
        }
      >
        <Text
          allowFontScaling={false}
          onPress={[Function]}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 20,
              },
              Object {
                "alignItems": "center",
                "borderColor": "red",
                "justifyContent": "flex-end",
                "paddingLeft": 80,
                "right": 0,
                "textAlign": "center",
              },
              Object {
                "fontFamily": "FontAwesome5Free-Solid",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {
                "fontWeight": "900",
              },
            ]
          }
        >
          
        </Text>
        <Text
          style={
            Object {
              "borderColor": "red",
              "height": 20,
              "position": "absolute",
              "right": -20,
              "textAlign": "center",
              "top": -10,
              "width": 20,
            }
          }
        >
          0
        </Text>
      </View>
      <Text
        allowFontScaling={false}
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            Object {
              "fontFamily": "anticon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginBottom": 20,
        }
      }
    >
      <RCTScrollView
        data={Array []}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View />
      </RCTScrollView>
    </View>
  </RCTSafeAreaView>
</View>
`;
