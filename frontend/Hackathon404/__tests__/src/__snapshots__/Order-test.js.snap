// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "alignContent": "center",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "flex-start",
      "top": 40,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "backgroundColor": "skyblue",
          "flexDirection": "row",
          "height": 50,
        }
      }
    >
      <Text
        allowFontScaling={false}
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 20,
            },
            Object {
              "fontSize": 20,
              "paddingLeft": 10,
              "paddingRight": 20,
            },
            Object {
              "fontFamily": "FontAwesome5Free-Solid",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {
              "fontWeight": "900",
            },
          ]
        }
      >
        
      </Text>
      <Text
        style={
          Object {
            "alignItems": "center",
            "fontSize": 20,
            "fontWeight": "bold",
            "justifyContent": "center",
            "paddingLeft": 10,
            "textAlign": "center",
          }
        }
      >
        Your Cart
      </Text>
      <Text
        allowFontScaling={false}
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 20,
            },
            Object {
              "position": "absolute",
              "right": 15,
            },
            Object {
              "fontFamily": "anticon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "marginBottom": 20,
            "padding": 10,
          },
          Object {
            "justifyContent": "center",
            "marginBottom": 40,
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          onPress={[Function]}
          style={
            Object {
              "backgroundColor": "#f1980f",
              "borderColor": "#f1980f",
              "borderWidth": 1,
              "fontWeight": "600",
              "height": 40,
              "margin": 12,
              "padding": 10,
              "textAlign": "center",
            }
          }
        >
          Proceed to Order
        </Text>
      </View>
      <RCTScrollView
        data={Array []}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View />
      </RCTScrollView>
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignContent": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <Text
            onPress={[Function]}
            style={
              Object {
                "backgroundColor": "grey",
                "borderColor": "grey",
                "borderWidth": 1,
                "fontWeight": "600",
                "height": 40,
                "margin": 10,
                "padding": 10,
                "textAlign": "center",
                "width": 120,
              }
            }
          >
            Delete
          </Text>
          <Text
            style={
              Object {
                "backgroundColor": "grey",
                "borderColor": "grey",
                "borderWidth": 1,
                "fontWeight": "600",
                "height": 40,
                "margin": 10,
                "padding": 10,
                "textAlign": "center",
                "width": 120,
              }
            }
          >
            Save for later
          </Text>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;
